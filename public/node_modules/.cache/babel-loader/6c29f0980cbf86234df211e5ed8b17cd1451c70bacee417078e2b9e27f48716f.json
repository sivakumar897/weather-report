{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sivakumar\\\\OneDrive\\\\Desktop\\\\weather-app\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\nfunction App() {\n  _s();\n  const [location, setLocation] = useState('');\n  const [forecast, setForecast] = useState([]);\n  const [city, setCity] = useState('');\n  const [loading, setLoading] = useState(false);\n  const getWeather = async loc => {\n    setLoading(true);\n    try {\n      const geoRes = await axios.get(`https://api.openweathermap.org/geo/1.0/direct?q=${loc}&limit=1&appid=${API_KEY}`);\n      if (geoRes.data.length === 0) {\n        alert('City not found!');\n        return;\n      }\n      const {\n        lat,\n        lon,\n        name,\n        country\n      } = geoRes.data[0];\n      const weatherRes = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`);\n      setForecast(weatherRes.data.list.filter((_, idx) => idx % 8 === 0));\n      setCity(`${name}, ${country}`);\n    } catch (error) {\n      alert('Something went wrong!');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(async position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      const res = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`);\n      setForecast(res.data.list.filter((_, idx) => idx % 8 === 0));\n      setCity(res.data.city.name);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"5-Day Weather Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter city\",\n        value: location,\n        onChange: e => setLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getWeather(location),\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast\",\n        children: forecast.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: new Date(day.dt * 1000).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://openweathermap.org/img/wn/${day.weather[0].icon}.png`,\n            alt: \"weather icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: day.weather[0].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [day.main.temp, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"l/YBdbC1q1aW+KVa8GQ811SzIfw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_KEY","process","env","REACT_APP_WEATHER_API_KEY","App","_s","location","setLocation","forecast","setForecast","city","setCity","loading","setLoading","getWeather","loc","geoRes","get","data","length","alert","lat","lon","name","country","weatherRes","list","filter","_","idx","error","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","res","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","day","index","Date","dt","toLocaleDateString","src","weather","icon","alt","description","main","temp","_c","$RefreshReg$"],"sources":["C:/Users/sivakumar/OneDrive/Desktop/weather-app/weather-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\n\nfunction App() {\n  const [location, setLocation] = useState('');\n  const [forecast, setForecast] = useState([]);\n  const [city, setCity] = useState('');\n  const [loading, setLoading] = useState(false);\n\n const getWeather = async (loc) => {\n  setLoading(true);\n  try {\n    const geoRes = await axios.get(\n      `https://api.openweathermap.org/geo/1.0/direct?q=${loc}&limit=1&appid=${API_KEY}`\n    );\n\n    if (geoRes.data.length === 0) {\n      alert('City not found!');\n      return;\n    }\n\n    const { lat, lon, name, country } = geoRes.data[0];\n    const weatherRes = await axios.get(\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`\n    );\n\n    setForecast(weatherRes.data.list.filter((_, idx) => idx % 8 === 0));\n    setCity(`${name}, ${country}`);\n  } catch (error) {\n    alert('Something went wrong!');\n  } finally {\n    setLoading(false);\n  }\n};\n\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(async (position) => {\n      const { latitude, longitude } = position.coords;\n      const res = await axios.get(\n        `https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`\n      );\n      setForecast(res.data.list.filter((_, idx) => idx % 8 === 0));\n      setCity(res.data.city.name);\n    });\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <h1>5-Day Weather Forecast</h1>\n      <div className=\"search-box\">\n  <input\n    type=\"text\"\n    placeholder=\"Enter city\"\n    value={location}\n    onChange={(e) => setLocation(e.target.value)}\n  />\n  <button onClick={() => getWeather(location)}>Search</button>\n</div>\n\n\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <>\n          <h2>{city}</h2>\n          <div className=\"forecast\">\n            {forecast.map((day, index) => (\n              <div key={index} className=\"weather-card\">\n                <p>{new Date(day.dt * 1000).toLocaleDateString()}</p>\n                <img\n                  src={`https://openweathermap.org/img/wn/${day.weather[0].icon}.png`}\n                  alt=\"weather icon\"\n                />\n                <p>{day.weather[0].description}</p>\n                <p>{day.main.temp}Â°C</p>\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}